clear all;
clc;

% Set up an array of points for a cube
pts = [1 1 1 1 -1 -1 -1 -1 ;
    1 1 -1 -1 1 1 -1 -1 ;
    1 -1 1 -1 1 -1 1 -1 ];

% Create the rotation matrices
theta_x = 90;
theta_y = 0;
theta_z = 30;

rot_x = [ cosd(theta_x), -sind(theta_x), 0; ...
          sind(theta_x),  cosd(theta_x), 0; ...
          0, 0, 1];

rot_y = [cosd(theta_y), 0,   sind(theta_y); ...
                     0, 1,               0; ...
        -sind(theta_y), 0,  cosd(theta_y)];

rot_z = [1, 0, 0; ...
          0, cosd(theta_z), -sind(theta_z); ...
          0, sind(theta_z),  cosd(theta_z)];

% Rotate the points
rot_pts = rot_x * rot_z * pts;

% Plot the axis marker
clf;
plot3([3 0],[0 0], [0 0],'r','linewidth',3);
hold on;
plot3([0 0],[3 0], [0 0],'g','linewidth',3);
plot3([0 0],[0 0], [3 0],'b','linewidth',3);


% Plot the vertices (original then rotated)
plot3(pts(1,:),pts(2,:),pts(3,:),'.b','MarkerSize',20);
plot3(rot_pts(1,:), rot_pts(2,:), rot_pts(3,:),'.r','MarkerSize',20);


% Plot the edges (original then rotated)
segment_order = [1,2;3,4;5,6;7,8;1,3;2,4;5,7;6,8;1,5;2,6;3,7;4,8];

for i = 1:size(segment_order, 1)
   plot3(pts(1,segment_order(i,:)), pts(2,segment_order(i,:)), pts(3,segment_order(i,:)), ':b');
   plot3(rot_pts(1,segment_order(i,:)), rot_pts(2,segment_order(i,:)), rot_pts(3,segment_order(i,:)), '-r');
end

% Clean up the view
axis equal;
axis(2*[-1, 1, -1, 1, -1, 1]);
view(60,20);
